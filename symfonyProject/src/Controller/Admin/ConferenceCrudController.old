<?php

namespace App\Controller\Admin;

use App\Entity\Conference;
use EasyCorp\Bundle\EasyAdminBundle\Config\Crud;
use EasyCorp\Bundle\EasyAdminBundle\Config\Filters;
use EasyCorp\Bundle\EasyAdminBundle\Controller\AbstractCrudController;
use EasyCorp\Bundle\EasyAdminBundle\Field\BooleanField;
use EasyCorp\Bundle\EasyAdminBundle\Field\CollectionField;
use EasyCorp\Bundle\EasyAdminBundle\Field\IdField;
use EasyCorp\Bundle\EasyAdminBundle\Field\TextField;
use EasyCorp\Bundle\EasyAdminBundle\Filter\BooleanFilter;
use EasyCorp\Bundle\EasyAdminBundle\Filter\TextFilter;

class ConferenceCrudController extends AbstractCrudController
{
    # https://symfony.com/bundles/EasyAdminBundle/current/crud.html#crud-controller-configuration    
    public static function getEntityFqcn(): string # Must return a FQCN (fully-qualified class name) of a Doctrine ORM entity
    {
        return Conference::class;
    }
    
    /**
     * Método para configurar las columnas por defecto del esta entidad en el dashboard
     * https://symfony.com/bundles/EasyAdminBundle/current/fields.html
     * 
     * Si este método está comentado por defecto, aparecerán todas las columnas
     */
    public function configureFields(string $pageName): iterable
    {
        # yield es parecido a return, pero en lugar de detener la ejecución de la función y devolver un valor, yield facilita el valor al bucle que itera sobre el generador y pausa la ejecución de la función generadora.
        # Con la siguiente sentencia hacemos que en la vista de Conference, en el dashboard, solo se vea la columna city pero con el nombre LA_CIUDAD!
        #yield TextField::new("city", "LA_CIUDAD!");

        // return [
        //     IdField::new('id'),
        //     TextField::new('title'),
        //     TextEditorField::new('description'),
        // ];

        return [
            // IdField::new('id'),
            TextField::new('name', "Nombre"),
            TextField::new('city', "Ciudad"),
            TextField::new('year', "Año"),
            BooleanField::new("isInternational", "Internacional"),
            // CollectionField::new('comment', 'Comentarios')
        ];
    }

    /** 
     * Método para configurar filtros en las columnas de esta entidad en el dashboard
     * https://symfony.com/bundles/EasyAdminBundle/current/filters.html
     */
    public function configureFilters(Filters $filters): Filters
    {
        return $filters
        ->add("city")
        ->add(TextFilter::new("year", "Year!!!")) // De esta forma podemos personalizar aún más los filtros cambiándole el nombre
        // most of the times there is no need to define the
        // filter type because EasyAdmin can guess it automatically
        ->add(BooleanFilter::new('isInternational'));
    }  

    /**
     * Método para configurar parámetros a la hora de hacer CRUDs de esta entidad desde el dashboard
     * https://symfony.com/bundles/EasyAdminBundle/current/crud.html
     */
    public function configureCrud(Crud $crud): Crud
    {
        return $crud
        ->setEntityLabelInPlural("Conferencias")
        ->setEntityLabelInSingular("Conferencia")
        ->setDefaultSort(["id" => "desc"]);
    }
   
}
